module Data.Int;

open import Stdlib.Prelude hiding {mod};
open import Stdlib.Data.Int.Ord;
open import Stdlib.Data.Int;

abs : Int -> Nat;
abs (ofNat n) := n;
abs (negSuc n) := suc n;

gcd : Int → Int → Int;
gcd a b :=
  let
    terminating
    gcd' : Int -> Int -> Int;
    gcd' a b := if (a == 0) b (gcd' (mod b a) a);
  in if (a > b) (gcd' b a) (gcd' a b);
